class Solution {
public:
    int subarraysum(vector<int>&temp,int target)
    {
        int n=temp.size();
        int ans=0;

        map<int,int>mp;

        int sum=0;


        for(int i=0;i<n;i++)
        {
            sum+=temp[i];

            if(sum==target) ans++;


            if(mp.find(sum-target)!=mp.end())
            {
                ans+=mp[sum-target];
            }


            mp[sum]++;
        }

        return ans;
    }
  
    int numSubmatrixSumTarget(vector<vector<int>>& matrix, int target) {
        
          int n=matrix.size();
          int m=matrix[0].size();

          int cnt=0;

          for(int i=0;i<n;i++)
          {
              vector<int>temp(m,0);

              for(int j=i;j<n;j++)
              {
                  for(int k=0;k<m;k++)
                  {
                      temp[k]+=matrix[j][k];
                  }


                  cnt+=subarraysum(temp,target);
              }


          }


      return cnt;


    }
};
