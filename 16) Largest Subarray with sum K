int lenOfLongSubarr(int arr[],  int n, int target) 
    {   
        // HashMap to store the first occurrence of each cumulative sum
        unordered_map<int,int>mp;
        
        // Initialize for cases where the subarray starts from index 0
        mp[0]=-1;
        
        int curr_sum=0; // Current cumulative sum
        int ans=0;  // Maximum length of subarray with sum equal to k
        
        for(int i=0;i<n;i++)
        {
            curr_sum+=arr[i];
            
            
            // Check if there is a cumulative sum that, when subtracted, results in sum k
            if(mp.find(curr_sum-target)!=mp.end())
            {
                ans=max(ans,i-mp[curr_sum-target]);
            }
            
            
          // Only store the first occurrence of each cumulative sum
          if(mp.find(curr_sum)==mp.end())
          {
              mp[curr_sum]=i;
          }
          
          
        }
        
        
        return ans;
        
    } 
